---
export interface Props{
    title: string,
    description: string,
    href: string,
    index?: number,
    type?: string,
    date?: string
}

const {title, description, href, index = 0, type = 'projects', date} = Astro.props;

// Definir gradientes temÃ¡ticos para variar los colores
const gradients = [
    'from-purple-900/30 to-blue-900/30 border-purple-500/20 hover:border-purple-400/50 hover:shadow-purple-500/20',
    'from-blue-900/30 to-indigo-900/30 border-blue-500/20 hover:border-blue-400/50 hover:shadow-blue-500/20',
    'from-indigo-900/30 to-purple-900/30 border-indigo-500/20 hover:border-indigo-400/50 hover:shadow-indigo-500/20',
    'from-cyan-900/30 to-blue-900/30 border-cyan-500/20 hover:border-cyan-400/50 hover:shadow-cyan-500/20',
    'from-violet-900/30 to-purple-900/30 border-violet-500/20 hover:border-violet-400/50 hover:shadow-violet-500/20',
    'from-pink-900/30 to-purple-900/30 border-pink-500/20 hover:border-pink-400/50 hover:shadow-pink-500/20',
    'from-emerald-900/30 to-teal-900/30 border-emerald-500/20 hover:border-emerald-400/50 hover:shadow-emerald-500/20'
];

const gradientClass = gradients[index % gradients.length];

// Iconos temÃ¡ticos segÃºn el tipo
const icon = type === 'projects' ? 'ðŸš€' : 'ðŸŽ¯';
---

<a href={href} class="group block">
    <article class={`relative bg-gradient-to-br ${gradientClass} rounded-2xl p-8 border transition-all duration-500 hover:scale-105 hover:shadow-2xl`}>
        <!-- Efecto de overlay en hover -->
        <div class="absolute inset-0 bg-gradient-to-br from-white/5 to-transparent rounded-2xl opacity-0 group-hover:opacity-100 transition-opacity duration-500"></div>
        
        <!-- Contenido -->
        <div class="relative">
            <!-- Header -->
            <div class="flex items-start justify-between mb-4">
                <div class="text-2xl mb-2">{icon}</div>
                <div class="flex flex-col items-end gap-2">
                    <div class="text-xs text-gray-400 bg-white/10 px-2 py-1 rounded-full">
                        {type === 'projects' ? 'Proyecto' : 'Experiencia'}
                    </div>
                    {date && (
                        <div class="text-xs text-purple-300 bg-purple-500/20 px-2 py-1 rounded-full border border-purple-500/30">
                            ðŸ“… {date}
                        </div>
                    )}
                </div>
            </div>
            
            <!-- TÃ­tulo -->
            <h2 class="text-xl md:text-2xl font-bold text-white mb-4 leading-tight group-hover:text-purple-200 transition-colors duration-300">
                {title}
            </h2>
            
            <!-- DescripciÃ³n -->
            <p class="text-gray-300 leading-relaxed mb-6 line-clamp-4">
                {description}
            </p>
            
            <!-- Footer con CTA -->
            <div class="flex items-center justify-between">
                <div class="flex items-center text-purple-300 group-hover:text-purple-200 transition-colors duration-300">
                    <span class="text-sm font-medium mr-2">Ver detalles</span>
                    <svg class="w-4 h-4 transform group-hover:translate-x-1 transition-transform duration-300" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7"></path>
                    </svg>
                </div>
            </div>
        </div>
        
        <!-- Efecto de brillo decorativo -->
        <div class="absolute top-4 right-4 w-16 h-16 bg-gradient-to-br from-white/10 to-transparent rounded-full blur-xl opacity-0 group-hover:opacity-100 transition-opacity duration-500"></div>
    </article>
</a>

<style>
    .line-clamp-4 {
        display: -webkit-box;
        -webkit-line-clamp: 4;
        -webkit-box-orient: vertical;
        overflow: hidden;
    }
</style>