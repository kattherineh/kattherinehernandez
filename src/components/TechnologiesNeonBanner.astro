---
import Image from 'astro/components/Image.astro';

export interface Props {
    title: string,
    items: { src: string, alt: string }[]
}

const { title, items } = Astro.props;
const uniqueId = `tech-banner-${Math.random().toString(36).substr(2, 9)}`;
---

<div class="text-clear mb-8">
    <h3 class="text-center mb-6 text-xl font-semibold bg-gradient-to-r from-purple-400 to-blue-400 bg-clip-text text-transparent">{title}</h3>
    
    <!-- Contenedor principal -->
    <div class="relative overflow-hidden rounded-2xl border border-purple-500/30 bg-gradient-to-r from-gray-900/50 via-purple-900/30 to-gray-900/50 backdrop-blur-sm">
        <!-- Efecto neon del borde -->
        <div class="absolute inset-0 rounded-2xl animate-pulse">
            <div class="absolute inset-0 rounded-2xl border-2 border-transparent bg-gradient-to-r from-purple-400 via-blue-400 to-purple-400 opacity-20"></div>
        </div>
        
        <!-- Cinta deslizante -->
        <div class="relative z-10 py-8 overflow-hidden" id={`container-${uniqueId}`}>
            <div class="flex justify-center" id={`slider-${uniqueId}`}>
                <!-- Primera secuencia -->
                <div class="flex items-center justify-center gap-8 px-6" id={`content-${uniqueId}`}>
                    {items.map((item, index) => (
                        <div class="flex-shrink-0 group cursor-pointer">
                            <div class="relative">
                                <!-- Efecto glow -->
                                <div class="absolute -inset-2 rounded-xl bg-gradient-to-r from-purple-400 to-blue-400 opacity-0 group-hover:opacity-30 blur transition-all duration-300"></div>
                                
                                <!-- Logo -->
                                <div class="relative bg-white/5 backdrop-blur-sm rounded-xl p-3 border border-white/10 group-hover:border-purple-400/50 transition-all duration-300">
                                    <Image
                                        src={item.src}
                                        alt={item.alt}
                                        width={80}
                                        height={80}
                                        class="h-16 w-16 object-contain filter brightness-90 group-hover:brightness-110 group-hover:scale-110 transition-all duration-300"
                                    />
                                </div>
                                
                                <!-- Tooltip -->
                                <div class="absolute -bottom-8 left-1/2 transform -translate-x-1/2 opacity-0 group-hover:opacity-100 transition-all duration-300">
                                    <div class="bg-black/80 text-white text-xs px-2 py-1 rounded whitespace-nowrap">
                                        {item.alt}
                                    </div>
                                </div>
                            </div>
                        </div>
                    ))}
                </div>
                
                <!-- Segunda secuencia para continuidad (solo si necesita scroll) -->
                <div class="items-center gap-8 px-6 hidden" id={`duplicate-${uniqueId}`}>
                    {items.map((item, index) => (
                        <div class="flex-shrink-0 group cursor-pointer">
                            <div class="relative">
                                <div class="absolute -inset-2 rounded-xl bg-gradient-to-r from-purple-400 to-blue-400 opacity-0 group-hover:opacity-30 blur transition-all duration-300"></div>
                                <div class="relative bg-white/5 backdrop-blur-sm rounded-xl p-3 border border-white/10 group-hover:border-purple-400/50 transition-all duration-300">
                                    <Image
                                        src={item.src}
                                        alt={item.alt}
                                        width={80}
                                        height={80}
                                        class="h-16 w-16 object-contain filter brightness-90 group-hover:brightness-110 group-hover:scale-110 transition-all duration-300"
                                    />
                                </div>
                                <div class="absolute -bottom-8 left-1/2 transform -translate-x-1/2 opacity-0 group-hover:opacity-100 transition-all duration-300">
                                    <div class="bg-black/80 text-white text-xs px-2 py-1 rounded whitespace-nowrap">
                                        {item.alt}
                                    </div>
                                </div>
                            </div>
                        </div>
                    ))}
                </div>
            </div>
        </div>
    </div>
</div>

<script define:vars={{ uniqueId }}>
    function initTechBanner() {
        const container = document.getElementById(`container-${uniqueId}`);
        const slider = document.getElementById(`slider-${uniqueId}`);
        const content = document.getElementById(`content-${uniqueId}`);
        const duplicate = document.getElementById(`duplicate-${uniqueId}`);
        
        if (!container || !slider || !content || !duplicate) return;
        
        function checkOverflow() {
            const containerWidth = container.offsetWidth;
            const contentWidth = content.scrollWidth;
            
            // Si el contenido es más ancho que el contenedor
            if (contentWidth > containerWidth) {
                // Activar scroll infinito
                duplicate.classList.remove('hidden');
                duplicate.classList.add('flex');
                slider.style.width = '200%';
                slider.classList.remove('justify-center');
                slider.classList.add('animate-slide');
                content.style.justifyContent = 'flex-start';
            } else {
                // Desactivar scroll, mantener centrado
                duplicate.classList.add('hidden');
                duplicate.classList.remove('flex');
                slider.style.width = 'auto';
                slider.classList.remove('animate-slide');
                slider.classList.add('justify-center');
                content.style.justifyContent = 'center';
            }
        }
        
        // Verificar en carga inicial
        checkOverflow();
        
        // Verificar en cambio de tamaño de ventana
        window.addEventListener('resize', checkOverflow);
        
        // Pausar animación al hacer hover
        slider.addEventListener('mouseenter', () => {
            if (slider.classList.contains('animate-slide')) {
                slider.style.animationPlayState = 'paused';
            }
        });
        
        slider.addEventListener('mouseleave', () => {
            if (slider.classList.contains('animate-slide')) {
                slider.style.animationPlayState = 'running';
            }
        });
    }
    
    // Ejecutar cuando el DOM esté listo
    if (document.readyState === 'loading') {
        document.addEventListener('DOMContentLoaded', initTechBanner);
    } else {
        initTechBanner();
    }
</script>

<style>
    .animate-slide {
        animation: slide 30s linear infinite;
    }
    
    @keyframes slide {
        0% {
            transform: translateX(0);
        }
        100% {
            transform: translateX(-50%);
        }
    }
    
    /* Efecto de parpadeo para el borde */
    @keyframes pulse-border {
        0%, 100% {
            box-shadow: 0 0 20px rgba(168, 85, 247, 0.3);
        }
        50% {
            box-shadow: 0 0 30px rgba(59, 130, 246, 0.5);
        }
    }
</style>
