---
import Image from 'astro/components/Image.astro';

export interface Props {
    title: string,
    items: { src: string, alt: string }[]
}

const { title, items } = Astro.props;
const uniqueId = `tech-simple-${Math.random().toString(36).substr(2, 9)}`;
---

<div class="text-clear mb-8">
    <h3 class="text-center mb-6 text-md ">{title}</h3>
    
    <!-- Contenedor de la cinta -->
    <div class="overflow-hidden relative bg-gradient-to-r from-purple-900/20 to-blue-900/20 rounded-lg py-4" id={`container-${uniqueId}`}>
        <!-- Cinta animada -->
        <div class="flex justify-center" id={`slider-${uniqueId}`}>
            <!-- Primera instancia de los logos -->
            <div class="flex items-center justify-center gap-8 px-4" id={`content-${uniqueId}`}>
                {items.map((item) => (
                    <div class="flex-shrink-0">
                        <Image
                            src={item.src}
                            alt={item.alt}
                            width={60}
                            height={60}
                            class="h-12 w-12 object-contain filter brightness-90 hover:brightness-110 transition-all duration-300"
                        />
                    </div>
                ))}
            </div>
            <!-- Segunda instancia para efecto continuo (solo si es necesario) -->
            <div class="items-center gap-8 px-4 hidden" id={`duplicate-${uniqueId}`}>
                {items.map((item) => (
                    <div class="flex-shrink-0">
                        <Image
                            src={item.src}
                            alt={item.alt}
                            width={60}
                            height={60}
                            class="h-12 w-12 object-contain filter brightness-90 hover:brightness-110 transition-all duration-300"
                        />
                    </div>
                ))}
            </div>
        </div>
    </div>
</div>

<script define:vars={{ uniqueId }}>
    function initSimpleBanner() {
        const container = document.getElementById(`container-${uniqueId}`);
        const slider = document.getElementById(`slider-${uniqueId}`);
        const content = document.getElementById(`content-${uniqueId}`);
        const duplicate = document.getElementById(`duplicate-${uniqueId}`);
        
        if (!container || !slider || !content || !duplicate) return;
        
        function checkOverflow() {
            const containerWidth = container.offsetWidth;
            const contentWidth = content.scrollWidth;
            
            // Si el contenido es más ancho que el contenedor
            if (contentWidth > containerWidth) {
                // Activar scroll infinito
                duplicate.classList.remove('hidden');
                duplicate.classList.add('flex');
                slider.style.width = '200%';
                slider.classList.remove('justify-center');
                slider.classList.add('animate-scroll');
                content.style.justifyContent = 'flex-start';
            } else {
                // Desactivar scroll, mantener centrado
                duplicate.classList.add('hidden');
                duplicate.classList.remove('flex');
                slider.style.width = 'auto';
                slider.classList.remove('animate-scroll');
                slider.classList.add('justify-center');
                content.style.justifyContent = 'center';
            }
        }
        
        // Verificar en carga inicial
        checkOverflow();
        
        // Verificar en cambio de tamaño de ventana
        window.addEventListener('resize', checkOverflow);
        
        // Pausar animación al hacer hover
        slider.addEventListener('mouseenter', () => {
            if (slider.classList.contains('animate-scroll')) {
                slider.style.animationPlayState = 'paused';
            }
        });
        
        slider.addEventListener('mouseleave', () => {
            if (slider.classList.contains('animate-scroll')) {
                slider.style.animationPlayState = 'running';
            }
        });
    }
    
    // Ejecutar cuando el DOM esté listo
    if (document.readyState === 'loading') {
        document.addEventListener('DOMContentLoaded', initSimpleBanner);
    } else {
        initSimpleBanner();
    }
</script>

<style>
    .animate-scroll {
        animation: scroll 20s linear infinite;
    }
    
    @keyframes scroll {
        0% {
            transform: translateX(0);
        }
        100% {
            transform: translateX(-50%);
        }
    }
</style>

<style>
    .animate-scroll {
        animation: scroll 20s linear infinite;
        width: calc(200%);
    }
    
    @keyframes scroll {
        0% {
            transform: translateX(0);
        }
        100% {
            transform: translateX(-50%);
        }
    }
    
    /* Pausar animación al hover */
    .animate-scroll:hover {
        animation-play-state: paused;
    }
</style>
